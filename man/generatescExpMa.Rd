% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scAPAtrap_funlib.R
\name{generatescExpMa}
\alias{generatescExpMa}
\title{Generate single cell expression matrix}
\usage{
generatescExpMa(
  countsfile,
  peaksfile,
  barcode = NULL,
  tails = NULL,
  d = 100,
  min.cells = 10,
  min.count = 10,
  ofile = NULL,
  ...
)
}
\arguments{
\item{countsfile}{The decompressed file path of counts.tsv.gz generated by \code{\link{countPeaks}} or a count table (gene/cell/count).}

\item{peaksfile}{The path of the peaks.saf file generated by \code{\link{generateSAF}}.}

\item{barcode}{Vector of the barcode list for filtering cells.}

\item{tails}{The result produced by \code{\link{findTails}} or \code{\link{findTailsByPeaks}}.
If provided, then filter tailed-peaks within d nt.}

\item{d}{Max distance from the tail and peak to determine whether a peak is real (if it is within d-nt of a tail).}

\item{min.cells}{peak is expressed in at least a few cells,the default value is 10.}

\item{min.count}{peak minimum expression, the default value is 10.}

\item{ofile}{if not NULL then output the an variable called scAPAtrapData to ofile, and return ofile.}

\item{...}{Arguments passed to other methods and/or advanced arguments.
Advanced arguments:
\describe{
\item{verbose }{If `TRUE` basic status updates will be printed along the way.}
\item{logf }{If not NULL, then it should be a character string denoting a file name. Then message will be written to `logf`.}
}}
}
\value{
A list containing peaks.meta and peaks.count (ofile=NULL) or the ofile name (ofile!=NULL).
The ofile is an RDA file which contains a variable called scAPAtrapData after load(ofile). The scAPAtrapData is a list.
}
\description{
Given peaks' count and annotation file, this function can filter peaks with low expression levels and generate different types of objects,
             including data.frame (df), list with data.frame peaks.meta and Sparse Matrix peaks.count (list), SeuratObject (Seurat),  SingleCellExperiment (sce), movAPA's PACdataset (PAC).
}
\section{Warning}{
 The chromosome name in tails and peaksfile(peaks.saf) must be consistent (e.g., both be 1 or be Chr1).
}

\examples{
\dontrun{
countsfile <- countPeaks(umitools.path,'./data/final.bam','./data',TenX=TRUE)
peakfile <- generateSAF(forwardPeaks,reversePeaks,'./data')
tails <- findTails(bamfile = './data/demo.bam')
barcode <- utils::read.delim2('./data/barcodes.tsv',header = FALSE)
barcode <- gsub('-[0-9]','',barcode$V1)
scExpMa <- generatescExpMa(countsfile, peaksfile, barcode, tails,
                          d=100, min.cells = 10, min.count = 10)
scExpMa2 <- eneratescExpMa(countsfile, peaksfile, barcode,
               min.cells = 10, min.count = 100,  verbose=TRUE, logf='xx.log')
}
}
