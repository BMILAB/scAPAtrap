% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scAPAtrap_funlib.R
\name{countPeaks}
\alias{countPeaks}
\title{Calculate the expression level of each peak in each cell with umi_tools}
\usage{
countPeaks(umitools.path, input, outputdir, TenX = TRUE, ...)
}
\arguments{
\item{umitools.path}{The path of the umi_tools.}

\item{input}{The final.bam file is generated by \code{\link{generateFinalBam}}.}

\item{outputdir}{Output file directory.}

\item{TenX}{Logical value, TRUE for 10X data or BAM resulted from STARsolo.}

\item{...}{Arguments passed to other methods and/or advanced arguments.
Advanced arguments:
\describe{
\item{verbose }{If `TRUE` basic status updates will be printed along the way.}
\item{logf }{If not NULL, then it should be a character string denoting a file name. Then message will be written to `logf`.}
\item{notRun }{Default is FALSE. If `TRUE`, the Shell commands inside this function will not run but output the commad line.}
}}
}
\value{
Full path of the <counts.tsv.gz> file in the outputdir directory
}
\description{
Calculate the expression level of each peak in each cell with umi_tools
}
\examples{
umitools.path <- '/home/aa/miniconda2/envs/umi_tools/bin/umi_tools'
input <- './data/final.bam'
outputdir <- './data'
\dontrun{
countPeaks(umitools.path, input, outputdir, TenX=TRUE)
}
countPeaks(umitools.path, input, outputdir, TenX=TRUE, notRun=TRUE)
}
